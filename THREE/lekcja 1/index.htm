<!DOCTYPE HTML>
<html>
<head>
    <script src="three.js"></script>
    <script>
        window.addEventListener("load", function () {
            var fov = 45; //GLOBALS
            var color = 0x000000;
            var width = 800;
            var height = 600;

           







            var scene = new THREE.Scene();
            var camera = new THREE.PerspectiveCamera(
                fov, // k¹t patrzenia kamery (FOV - field of view)
                4 / 3, // proporcje widoku, powinny odpowiadaæ proporjom naszego ekranu przegl¹darki
                0.1, // minimalna renderowana odleg³oœæ
                10000 // maxymalna renderowana odleg³oœæ
            );
            var renderer = new THREE.WebGLRenderer();
            renderer.setClearColor(color);
            renderer.setSize(width, height);
            camera.position.x = -200;
            camera.position.y = 200;
            camera.position.z = 200;
            if (document.getElementById('box')) {
                var geometry = new THREE.CubeGeometry(10, 10, 10, 1, 1, 1);
            }
            var material = new THREE.MeshBasicMaterial({
                color: 0x0000ff, side: THREE.DoubleSide, wireframe: true
            });
            var mesh = new THREE.Mesh(geometry, material);
            scene.add(mesh);
            camera.lookAt(mesh.position);
            document.getElementById("scene").appendChild(renderer.domElement);
            
            function animateScene() {
                var rotation = 0.01;
                rotation = document.getElementById('setRotate').value
                rotation = parseFloat(rotation)
                mesh.rotation.y += rotation;
                requestAnimationFrame(animateScene);
                renderer.render(scene, camera);
            }
            animateScene()

            
            document.getElementById('setFov').oninput = function () {
                fov = document.getElementById('setFov').value
                camera.fov = fov;
                camera.updateProjectionMatrix();
            };
            document.getElementById('setScale').oninput = function () {
                scale = document.getElementById('setScale').value
                mesh.scale.set(scale, scale, scale);
            };
           
            document.getElementById('white').onclick = function () {
                color = 0x000000
                renderer.setClearColor(color);
            };
            document.getElementById('black').onclick = function () {
                color = 0xffffff
                renderer.setClearColor(color);
            };
            //var geoTab = [THREE.BoxGeometry(10, 10, 10, 1, 1, 1), THREE.CubeGeometry(10, 10, 10, 1, 1, 1), THREE.CircleGeometry(5, 32), THREE.CylinderGeometry(5, 5, 20, 32), THREE.DodecahedronGeometry(1, 0), THREE.IcosahedronGeometry(1, 0), THREE.OctahedronGeometry(1, 0), THREE.PlaneGeometry(5, 20, 32), RingGeometry(1, 5, 32), THREE.SphereGeometry(5, 32, 32), THREE.TetrahedronGeometry(1, 0), THREE.TorusGeometry(10, 3, 16, 100)]
            var geoTxt = ['Box', 'Cube', 'Circle', 'Cylinder', 'Dodecahedron', 'Icosahedron', 'Octahedron', 'Plane', 'Ring', 'Sphere', 'Tetrahedron', 'Torus']
            var s = document.getElementById('geometry');
            for (var i = 0; i < geoTxt.length; i++) {
                var option = document.createElement('option');
                option.text = geoTxt[i];
                option.value = geoTxt[i];
                option.id = geoTxt[i];
                s.options[s.options.length] = option;
            }
            
        })
       
    </script>
    <style>
        body{
            margin:0;
            overflow: hidden;
        }
        #white{
            height:50px;
            width:50px;
            background-color:black;
            border: solid black 1px;

        }
        #black{
            height:50px;
            width:50px;
            border: solid black 1px;
            background-color:white;
        }
    </style>
</head>
<body>
    <div id="scene"></div>
    <div id="menu">
        <label>FOV</label><input type="range" id="setFov" value="45" min="0" max="90"/>
        <label>SCALE</label><input type="range" id="setScale" step="0.1" value="1" min="1" max="10"/>
        <label>ROTATION</label><input type="range" id="setRotate" step="0.01" value="0.01" min="0.01" max="2" />
    </div>
    <div id="white"></div>
    <div id="black"></div>
    <select id="geometry">

    </select>
</body>
</html>